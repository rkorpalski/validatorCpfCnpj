// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import cpfCnpj "github.com/rkorpalski/validatorCpfCnpj/pkg/cpfCnpj"
import mock "github.com/stretchr/testify/mock"

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// GetAllDocuments provides a mock function with given fields:
func (_m *Repository) GetAllDocuments() ([]cpfCnpj.CpfCnpj, error) {
	ret := _m.Called()

	var r0 []cpfCnpj.CpfCnpj
	if rf, ok := ret.Get(0).(func() []cpfCnpj.CpfCnpj); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]cpfCnpj.CpfCnpj)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MoveToBlacklist provides a mock function with given fields: documentId
func (_m *Repository) MoveToBlacklist(documentId string) error {
	ret := _m.Called(documentId)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(documentId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Save provides a mock function with given fields: _a0
func (_m *Repository) Save(_a0 cpfCnpj.CpfCnpj) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(cpfCnpj.CpfCnpj) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
